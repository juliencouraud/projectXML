<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<%@taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<%@ page import="java.util.*"%>
<%@ page import="model.*"%>
<html>
<head>
<%@include file="css/static1.jsp"%>
<link href="main.css" rel="stylesheet" type="text/css">
<script type="text/javascript">
$(document).ready(function () {

    (function ($) {

        $('#filter').keyup(function () {

            var rex = new RegExp($(this).val(), 'i');
            $('.searchable tr').hide();
            $('.searchable tr').filter(function () {
                return rex.test($(this).text());
            }).show();

        })

    }(jQuery));

});
</script>

<jsp:useBean id="utilisateur" scope="request" class="model.Utilisateur"></jsp:useBean>
</head>
<body>
	<div class="page-header">
		<h1>
			Profil utilisateur de
			<%
			out.println(utilisateur.getNom()+" "+utilisateur.getPrenom());
		%>
		</h1>
	</div>

	<h2>Carnet de contacts:</h2>

<div class="alert alert-success" id="events-result" data-es="AquÃ­ se muestra el resultado del evento">
    Here is the result of event.
</div>
<table id="events-table" data-url="data2.json" data-height="299" data-search="true" data-pagination="true" data-show-columns="true">
    <thead>
    <tr>
        <th data-field="state" data-checkbox="true"></th>
        <th data-field="id" data-sortable="true">Item ID</th>
        <th data-field="name" data-sortable="true">Item Name</th>
        <th data-field="price" data-sortable="true">Item Price</th>
    </tr>
    </thead>
</table>
<script>
    $(function () {
        $('#basic-events-table').next().click(function () {
            $(this).hide();

            var $result = $('#events-result');

            $('#events-table').bootstrapTable({
                /*
                onAll: function (name, args) {
                    console.log('Event: onAll, data: ', args);
                }
                onClickRow: function (row) {
                    $result.text('Event: onClickRow, data: ' + JSON.stringify(row));
                },
                onDblClickRow: function (row) {
                    $result.text('Event: onDblClickRow, data: ' + JSON.stringify(row));
                },
                onSort: function (name, order) {
                    $result.text('Event: onSort, data: ' + name + ', ' + order);
                },
                onCheck: function (row) {
                    $result.text('Event: onCheck, data: ' + JSON.stringify(row));
                },
                onUncheck: function (row) {
                    $result.text('Event: onUncheck, data: ' + JSON.stringify(row));
                },
                onCheckAll: function () {
                    $result.text('Event: onCheckAll');
                },
                onUncheckAll: function () {
                    $result.text('Event: onUncheckAll');
                },
                onLoadSuccess: function (data) {
                    $result.text('Event: onLoadSuccess, data: ' + data);
                },
                onLoadError: function (status) {
                    $result.text('Event: onLoadError, data: ' + status);
                },
                onColumnSwitch: function (field, checked) {
                    $result.text('Event: onSort, data: ' + field + ', ' + checked);
                },
                onPageChange: function (number, size) {
                    $result.text('Event: onPageChange, data: ' + number + ', ' + size);
                },
                onSearch: function (text) {
                    $result.text('Event: onSearch, data: ' + text);
                }
                */
            }).on('all.bs.table', function (e, name, args) {
                console.log('Event:', name, ', data:', args);
            }).on('click-row.bs.table', function (e, row, $element) {
                $result.text('Event: click-row.bs.table, data: ' + JSON.stringify(row));
            }).on('dbl-click-row.bs.table', function (e, row, $element) {
                $result.text('Event: dbl-click-row.bs.table, data: ' + JSON.stringify(row));
            }).on('sort.bs.table', function (e, name, order) {
                $result.text('Event: sort.bs.table, data: ' + name + ', ' + order);
            }).on('check.bs.table', function (e, row) {
                $result.text('Event: check.bs.table, data: ' + JSON.stringify(row));
            }).on('uncheck.bs.table', function (e, row) {
                $result.text('Event: uncheck.bs.table, data: ' + JSON.stringify(row));
            }).on('check-all.bs.table', function (e) {
                $result.text('Event: check-all.bs.table');
            }).on('uncheck-all.bs.table', function (e) {
                $result.text('Event: uncheck-all.bs.table');
            }).on('load-success.bs.table', function (e, data) {
                $result.text('Event: load-success.bs.table');
            }).on('load-error.bs.table', function (e, status) {
                $result.text('Event: load-error.bs.table, data: ' + status);
            }).on('column-switch.bs.table', function (e, field, checked) {
                $result.text('Event: column-switch.bs.table, data: ' +
                    field + ', ' + checked);
            }).on('page-change.bs.table', function (e, size, number) {
                $result.text('Event: page-change.bs.table, data: ' + number + ', ' + size);
            }).on('search.bs.table', function (e, text) {
                $result.text('Event: search.bs.table, data: ' + text);
            });
        });
    });
</script>

Column Events

Use formatter, events column option to define the custom events.
	
Item ID
	
Item Name
	
Item Price
	
Item Operate
	
Item ID
	
Item Name
	
Item Price
	
Item Operate
	0	Item 0	$0	
	1	Item 1	$1	
	2	Item 2	$2	
	3	Item 3	$3	
	4	Item 4	$4	
	5	Item 5	$5	
	6	Item 6	$6	
	7	Item 7	$7	
	8	Item 8	$8	
	9	Item 9	$9	
	10	Item 10	$10	
	11	Item 11	$11	
	12	Item 12	$12	
	13	Item 13	$13	
	14	Item 14	$14	
	15	Item 15	$15	
	16	Item 16	$16	
	17	Item 17	$17	
	18	Item 18	$18	
	19	Item 19	$19	
	20	Item 20	$20	

<table id="events-id2" data-url="data1.json" data-height="299" data-search="true">
    <thead>
    <tr>
        <th data-field="state" data-checkbox="true"></th>
        <th data-field="id" data-sortable="true">Item ID</th>
        <th data-field="name" data-sortable="true">Item Name</th>
        <th data-field="price" data-sortable="true">Item Price</th>
        <th data-field="operate" data-formatter="operateFormatter" data-events="operateEvents">Item Operate</th>
    </tr>
    </thead>
</table>
<script>
    function operateFormatter(value, row, index) {
        return [
            '<a class="like" href="javascript:void(0)" title="Like">',
                '<i class="glyphicon glyphicon-heart"></i>',
            '</a>',
            '<a class="edit ml10" href="javascript:void(0)" title="Edit">',
                '<i class="glyphicon glyphicon-edit"></i>',
            '</a>',
            '<a class="remove ml10" href="javascript:void(0)" title="Remove">',
                '<i class="glyphicon glyphicon-remove"></i>',
            '</a>'
        ].join('');
    }

    window.operateEvents = {
        'click .like': function (e, value, row, index) {
            alert('You click like icon, row: ' + JSON.stringify(row));
            console.log(value, row, index);
        },
        'click .edit': function (e, value, row, index) {
            alert('You click edit icon, row: ' + JSON.stringify(row));
            console.log(value, row, index);
        },
        'click .remove': function (e, value, row, index) {
            alert('You click remove icon, row: ' + JSON.stringify(row));
            console.log(value, row, index);
        }
    };
</script>

Table methods

The calling method syntax: $('#table').bootstrapTable('method', parameter);.
	Item ID 	Item Name 	Item Price

<div class="btn-group">
    <button class="btn btn-default" id="get-selections">
        Get Selections
    </button>
    <button class="btn btn-default" id="get-data" data-method="getData">
        Get Data
    </button>
    <button class="btn btn-default" id="load-data" data-method="load">
        Load Data
    </button>
    <button class="btn btn-default" id="append-data" data-method="append">
        Append Data
    </button>
    <button class="btn btn-default" id="remove-data" data-method="remove">
        Remove Data
    </button>
    <button class="btn btn-default" id="update-row" data-method="updateRow">
        Update Row
    </button>
    <button class="btn btn-default" id="merge-cells">
        Merge Cells
    </button>
    <button class="btn btn-default" id="check-all" data-method="checkAll">
        Check All
    </button>
    <button class="btn btn-default" id="uncheck-all" data-method="uncheckAll">
        Uncheck All
    </button>
    <button class="btn btn-default" id="show-loading" data-method="showLoading">
        Show Loading
    </button>
    <button class="btn btn-default" id="hide-loading" data-method="hideLoading">
        Hide Loading
    </button>
    <button class="btn btn-default" id="refresh" data-method="refresh">
        Refresh
    </button>
    <button class="btn btn-default" id="show-column" data-method="showColumn">
        Show Column
    </button>
    <button class="btn btn-default" id="hide-column" data-method="hideColumn">
        Hide Column
    </button>
</div>
<table id="table-methods-table" data-height="299">
    <thead>
    <tr>
        <th data-field="state" data-checkbox="true"></th>
        <th data-field="id">Item ID</th>
        <th data-field="name">Item Name</th>
        <th data-field="price">Item Price</th>
    </tr>
    </thead>
</table>
<script>
    $(function () {
        $('#table-methods').next().click(function () {
            $(this).hide();

            var id = 0,
                getRows = function () {
                    var rows = [];

                    for (var i = 0; i < 10; i++) {
                        rows.push({
                            id: id,
                            name: 'test' + id,
                            price: '$' + id
                        });
                        id++;
                    }
                    return rows;
                },
                // init table use data
                $table = $('#table-methods-table').bootstrapTable({
                    data: getRows()
                });

            $('#get-selections').click(function () {
                alert('Selected values: ' + JSON.stringify($table.bootstrapTable('getSelections')));
            });
            $('#get-data').click(function () {
                alert('current data: ' + JSON.stringify($table.bootstrapTable('getData')));
            });
            // This demonstrates utilizing the data-method attribute to use one 
            //     jQuery handler to execute multiple methods. 
            // ($this).data('method') retrieves the value of the data-method 
            //     attribute of the object that was clicked which is then passed to 
            //     the bootstrapTable function. 
            // Only the load and append methods require a parameter                                 
            $('#load-data, #append-data, #check-all, #uncheck-all, ' +
                    '#show-loading, #hide-loading').click(function () {
                $table.bootstrapTable($(this).data('method'), getRows());
            });
            $('#refresh').click(function () {
                $table.bootstrapTable('refresh', {
                    url: 'data1.json'
                });
            });
            $('#remove-data').click(function () {
                var selects = $table.bootstrapTable('getSelections');
                    ids = $.map(selects, function (row) {
                        return row.id;
                    });

                $table.bootstrapTable('remove', {
                    field: 'id',
                    values: ids
                });
            });
            $('#update-row').click(function () {
                $table.bootstrapTable('updateRow', {
                    index: 1,
                    row: {
                        name: 'test111111',
                        price: '$111111'
                    }
                });
            });
            $('#merge-cells').click(function () {
                $table.bootstrapTable('mergeCells', {
                    index: 1,
                    field: 'name',
                    colspan: 2,
                    rowspan: 3
                })
            });
            $('#show-column, #hide-column').click(function () {
                $table.bootstrapTable($(this).data('method'), 'id');
            });
        });
    });
</script>

Via JavaScript




	<div>
		<table id="example" class="table table-striped table-bordered"
			width="100%" cellspacing="0">
			<thead>
				<tr>
					<th>PrÃ©nom</th>
					<th>Nom</th>
					<th>Adresse Mail</th>
					<th>Groupe</th>
				</tr>
			</thead>
			<tbody>
				<%
					if(utilisateur.getListeContacts().estVide()){
						out.println("<tr>");
						out.println("<td>"+"Aucun"+"</td>");
						out.println("<td>"+"Aucun"+"</td>");
						out.println("<td>"+"Aucun"+"</td>");
						out.println("<td>"+"Aucun"+"</td>");
						out.println("</tr>");
					}
					else{
						for(Contact c :utilisateur.getListeContacts().getListeContacts()){
					out.println("<tr>");
					out.println("<td>"+c.getPrenom()+"</td>");
					out.println("<td>"+c.getNom()+"</td>");
					out.println("<td>"+c.getMail()+"</td>");
					out.println("<td>"+c.getGroupe()+"</td>");
					out.println("</tr>");
						}
					}
				%>
			</tbody>
		</table>
	</div>
	<ul>
		<li><a href="/projetXML/Modification">Modifier mon profil</a></li>
		<li><a href="/projetXML/gestionContacts">GÃ©rer mes contacts</a></li>
		<li><a href="/projetXML/Deconnexion">DÃ©connexion</a>
	</ul>
</body>
</html>